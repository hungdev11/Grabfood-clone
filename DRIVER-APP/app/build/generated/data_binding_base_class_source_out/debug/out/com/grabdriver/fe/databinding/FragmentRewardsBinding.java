// Generated by view binder compiler. Do not edit!
package com.grabdriver.fe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.grabdriver.fe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentRewardsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ProgressBar progressLoading;

  @NonNull
  public final RecyclerView recyclerRewards;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  @NonNull
  public final TextView textEmptyRewards;

  @NonNull
  public final TextView textTotalGems;

  private FragmentRewardsBinding(@NonNull LinearLayout rootView,
      @NonNull ProgressBar progressLoading, @NonNull RecyclerView recyclerRewards,
      @NonNull SwipeRefreshLayout swipeRefreshLayout, @NonNull TextView textEmptyRewards,
      @NonNull TextView textTotalGems) {
    this.rootView = rootView;
    this.progressLoading = progressLoading;
    this.recyclerRewards = recyclerRewards;
    this.swipeRefreshLayout = swipeRefreshLayout;
    this.textEmptyRewards = textEmptyRewards;
    this.textTotalGems = textTotalGems;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRewardsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRewardsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_rewards, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRewardsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.progress_loading;
      ProgressBar progressLoading = ViewBindings.findChildViewById(rootView, id);
      if (progressLoading == null) {
        break missingId;
      }

      id = R.id.recycler_rewards;
      RecyclerView recyclerRewards = ViewBindings.findChildViewById(rootView, id);
      if (recyclerRewards == null) {
        break missingId;
      }

      id = R.id.swipe_refresh_layout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      id = R.id.text_empty_rewards;
      TextView textEmptyRewards = ViewBindings.findChildViewById(rootView, id);
      if (textEmptyRewards == null) {
        break missingId;
      }

      id = R.id.text_total_gems;
      TextView textTotalGems = ViewBindings.findChildViewById(rootView, id);
      if (textTotalGems == null) {
        break missingId;
      }

      return new FragmentRewardsBinding((LinearLayout) rootView, progressLoading, recyclerRewards,
          swipeRefreshLayout, textEmptyRewards, textTotalGems);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
