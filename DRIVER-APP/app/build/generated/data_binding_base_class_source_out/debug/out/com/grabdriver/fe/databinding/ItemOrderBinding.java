// Generated by view binder compiler. Do not edit!
package com.grabdriver.fe.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.grabdriver.fe.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemOrderBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView textAddress;

  @NonNull
  public final TextView textDistance;

  @NonNull
  public final TextView textEstimatedTime;

  @NonNull
  public final TextView textNote;

  @NonNull
  public final TextView textOrderDate;

  @NonNull
  public final TextView textOrderId;

  @NonNull
  public final TextView textPaymentMethod;

  @NonNull
  public final TextView textShippingFee;

  @NonNull
  public final TextView textStatus;

  @NonNull
  public final TextView textTotalPrice;

  private ItemOrderBinding(@NonNull CardView rootView, @NonNull TextView textAddress,
      @NonNull TextView textDistance, @NonNull TextView textEstimatedTime,
      @NonNull TextView textNote, @NonNull TextView textOrderDate, @NonNull TextView textOrderId,
      @NonNull TextView textPaymentMethod, @NonNull TextView textShippingFee,
      @NonNull TextView textStatus, @NonNull TextView textTotalPrice) {
    this.rootView = rootView;
    this.textAddress = textAddress;
    this.textDistance = textDistance;
    this.textEstimatedTime = textEstimatedTime;
    this.textNote = textNote;
    this.textOrderDate = textOrderDate;
    this.textOrderId = textOrderId;
    this.textPaymentMethod = textPaymentMethod;
    this.textShippingFee = textShippingFee;
    this.textStatus = textStatus;
    this.textTotalPrice = textTotalPrice;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemOrderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_order, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemOrderBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.text_address;
      TextView textAddress = ViewBindings.findChildViewById(rootView, id);
      if (textAddress == null) {
        break missingId;
      }

      id = R.id.text_distance;
      TextView textDistance = ViewBindings.findChildViewById(rootView, id);
      if (textDistance == null) {
        break missingId;
      }

      id = R.id.text_estimated_time;
      TextView textEstimatedTime = ViewBindings.findChildViewById(rootView, id);
      if (textEstimatedTime == null) {
        break missingId;
      }

      id = R.id.text_note;
      TextView textNote = ViewBindings.findChildViewById(rootView, id);
      if (textNote == null) {
        break missingId;
      }

      id = R.id.text_order_date;
      TextView textOrderDate = ViewBindings.findChildViewById(rootView, id);
      if (textOrderDate == null) {
        break missingId;
      }

      id = R.id.text_order_id;
      TextView textOrderId = ViewBindings.findChildViewById(rootView, id);
      if (textOrderId == null) {
        break missingId;
      }

      id = R.id.text_payment_method;
      TextView textPaymentMethod = ViewBindings.findChildViewById(rootView, id);
      if (textPaymentMethod == null) {
        break missingId;
      }

      id = R.id.text_shipping_fee;
      TextView textShippingFee = ViewBindings.findChildViewById(rootView, id);
      if (textShippingFee == null) {
        break missingId;
      }

      id = R.id.text_status;
      TextView textStatus = ViewBindings.findChildViewById(rootView, id);
      if (textStatus == null) {
        break missingId;
      }

      id = R.id.text_total_price;
      TextView textTotalPrice = ViewBindings.findChildViewById(rootView, id);
      if (textTotalPrice == null) {
        break missingId;
      }

      return new ItemOrderBinding((CardView) rootView, textAddress, textDistance, textEstimatedTime,
          textNote, textOrderDate, textOrderId, textPaymentMethod, textShippingFee, textStatus,
          textTotalPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
